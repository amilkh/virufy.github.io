{"version":3,"sources":["helper/stepsDefinitions.ts","components/Layout/Layout.ts","components/Wizard/style.ts","components/Wizard/Wizard.tsx","components/DotIndicators/style.ts","components/DotIndicators/DotIndicators.tsx","containers/Welcome/Welcome.tsx"],"names":["baseUrl","welcomeUrl","getWelcomeStepsWithoutDots","storeKey","path","componentPath","props","nextStep","previousStep","welcomeStepsDefinitions","stepsDefinition","otherSteps","manualUploadStep","skipStep","metadata","currentLogic","isShortAudioStep","getCoughSteps","getSpeechSteps","baseMetadata","total","progressCurrent","progressTotal","current","getQuestionarySteps","Layout","styled","div","theme","breakpoints","tablet","WizardContainer","StepContainer","WizardNavControlPortal","AsyncLoad","loadable","container","fallback","React","memo","steps","children","match","useRouteMatch","location","useLocation","useState","loadSteps","setLoadSteps","pathList","useMemo","base","url","replace","map","step","useEffect","timing","duration","key","exact","Array","isArray","s","render","id","WelcomeWizardStepIndicators","ul","WelcomeWizardStepIndicator","li","colors","gray","darkBlack","className","stepButtons","stepButtonsElements","push","setStorageType","window","localStorage","createStore","name","stepsWithoutDots","currentSteps","allSteps","pathname","active","findIndex","Wizard","DotIndicators","length"],"mappings":"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","file":"static/js/48.eb77297b.chunk.js","sourcesContent":["const baseUrl = '/elderlycare/submit-steps';\nconst welcomeUrl = '/elderlycare/welcome';\n\nconst baseComponentPath = 'SubmitSteps';\nconst middleComponentPathRecording = 'RecordingsSteps';\nconst middleComponentPathQuestionary = 'Questionary';\nconst middleComponentPathSubmission = 'Submission';\nconst recordYourCoughLogic = 'recordYourCough';\n// const recordYourBreathLogic = 'recordYourBreath';\nconst recordYourSpeechLogic = 'recordYourSpeech';\n\nfunction getCoughSteps(storeKey: string): Wizard.Step[] {\n  return [\n    {\n      path: '/step-record/cough',\n      componentPath: `${baseComponentPath}/${middleComponentPathRecording}/Introduction`,\n      props: {\n        storeKey,\n        previousStep: `${welcomeUrl}`,\n        nextStep: `${baseUrl}/step-listen/cough`,\n        otherSteps: {\n          manualUploadStep: `${baseUrl}/step-manual-upload/cough`,\n          skipStep: `${baseUrl}/questionary/step1`,\n        },\n        metadata: {\n          currentLogic: recordYourCoughLogic,\n        },\n      },\n    },\n    {\n      path: '/step-manual-upload/cough',\n      componentPath: `${baseComponentPath}/${middleComponentPathRecording}/RecordManualUpload`,\n      props: {\n        storeKey,\n        previousStep: `${baseUrl}/step-record/cough`,\n        nextStep: `${baseUrl}/step-listen/cough`,\n        metadata: {\n          currentLogic: recordYourCoughLogic,\n        },\n      },\n    },\n    {\n      path: '/step-listen/cough',\n      componentPath: `${baseComponentPath}/${middleComponentPathRecording}/ListenAudio`,\n      props: {\n        storeKey,\n        previousStep: `${baseUrl}/step-record/cough`,\n        nextStep: `${baseUrl}/questionary/step1`,\n        otherSteps: {\n          isShortAudioStep: `${baseUrl}/thank-you`,\n        },\n        metadata: {\n          currentLogic: recordYourCoughLogic,\n        },\n      },\n    },\n  ];\n}\n\n// function getBreathSteps(storeKey: string) {\n//   return [\n//     {\n//       path: '/step-record/breath',\n//       componentPath: `${baseComponentPath}/${middleComponentPathRecording}/Introduction`,\n//       props: {\n//         storeKey,\n//         previousStep: `${baseUrl}/step-listen/cough`,\n//         nextStep: `${baseUrl}/step-listen/breath`,\n//         otherSteps: {\n//           manualUploadStep: `${baseUrl}/step-manual-upload/breath`,\n//         },\n//         metadata: {\n//           currentLogic: recordYourBreathLogic,\n//         },\n//       },\n//     },\n//     {\n//       path: '/step-manual-upload/breath',\n//       componentPath: `${baseComponentPath}/${middleComponentPathRecording}/RecordManualUpload`,\n//       props: {\n//         storeKey,\n//         previousStep: `${baseUrl}/step-record/breath`,\n//         nextStep: `${baseUrl}/step-listen/breath`,\n//         metadata: {\n//           currentLogic: recordYourBreathLogic,\n//         },\n//       },\n//     },\n//     {\n//       path: '/step-listen/breath',\n//       componentPath: `${baseComponentPath}/${middleComponentPathRecording}/ListenAudio`,\n//       props: {\n//         storeKey,\n//         previousStep: `${baseUrl}/step-record/breath`,\n//         nextStep: `${baseUrl}/questionary/step1`,\n//         metadata: {\n//           currentLogic: recordYourBreathLogic,\n//           // nextSpeech: !allowSpeechIn.includes(country),\n//         },\n//       },\n//     },\n//   ];\n// }\n\nfunction getSpeechSteps(storeKey: string) {\n  return [\n    {\n      path: '/step-record/speech',\n      componentPath: `${baseComponentPath}/${middleComponentPathRecording}/Introduction`,\n      props: {\n        storeKey,\n        previousStep: `${baseUrl}/step-listen/breath`,\n        nextStep: `${baseUrl}/step-listen/speech`,\n        otherSteps: {\n          manualUploadStep: `${baseUrl}/step-manual-upload/speech`,\n        },\n        metadata: {\n          currentLogic: recordYourSpeechLogic,\n        },\n      },\n    },\n    {\n      path: '/step-manual-upload/speech',\n      componentPath: `${baseComponentPath}/${middleComponentPathRecording}/RecordManualUpload`,\n      props: {\n        storeKey,\n        previousStep: `${baseUrl}/step-record/speech`,\n        nextStep: `${baseUrl}/step-listen/speech`,\n        metadata: {\n          currentLogic: recordYourSpeechLogic,\n        },\n      },\n    },\n    {\n      path: '/step-listen/speech',\n      componentPath: `${baseComponentPath}/${middleComponentPathRecording}/ListenAudio`,\n      props: {\n        storeKey,\n        previousStep: `${baseUrl}/step-record/speech`,\n        nextStep: `${baseUrl}/questionary/step3`,\n        metadata: {\n          currentLogic: recordYourSpeechLogic,\n        },\n      },\n    },\n  ];\n}\n\nfunction getQuestionarySteps(storeKey: string): Wizard.Step[] {\n  const baseMetadata = {\n    total: 3,\n    progressCurrent: 3,\n    progressTotal: 3,\n  };\n  return [\n    {\n      path: '/questionary/step1',\n      componentPath: `${baseComponentPath}/${middleComponentPathQuestionary}/Step1`,\n      props: {\n        storeKey,\n        previousStep: `${baseUrl}/step-listen/cough`,\n        nextStep: `${baseUrl}/questionary/step2`,\n        metadata: {\n          current: 1,\n          ...baseMetadata,\n        },\n      },\n    },\n    {\n      path: '/questionary/step2',\n      componentPath: `${baseComponentPath}/${middleComponentPathQuestionary}/Step2`,\n      props: {\n        storeKey,\n        previousStep: `${baseUrl}/questionary/step1`,\n        nextStep: `${baseUrl}/questionary/step3`,\n        metadata: {\n          current: 2,\n          ...baseMetadata,\n        },\n      },\n    },\n    {\n      path: '/questionary/step3',\n      componentPath: `${baseComponentPath}/${middleComponentPathQuestionary}/Step3`,\n      props: {\n        storeKey,\n        previousStep: `${baseUrl}/questionary/step2`,\n        nextStep: `${baseUrl}/sending`,\n        metadata: {\n          current: 3,\n          ...baseMetadata,\n        },\n      },\n    },\n    {\n      path: '/questionary/step4',\n      componentPath: `${baseComponentPath}/${middleComponentPathQuestionary}/Step4`,\n      props: {\n        storeKey,\n        previousStep: `${baseUrl}/questionary/step3`,\n        nextStep: `${baseUrl}/sending`,\n        metadata: {\n          ...baseMetadata,\n        },\n      },\n    },\n  ];\n}\n\n/** Welcome Steps */\n\nexport function getWelcomeStepsWithoutDots(storeKey: string): Wizard.Step[] {\n  return [\n    {\n      path: '',\n      componentPath: 'Welcome/Step1',\n      props: {\n        storeKey,\n        nextStep: `${baseUrl}/step-record/cough`,\n      },\n    },\n    {\n      path: '/step-3',\n      componentPath: 'Welcome/Step3',\n      props: {\n        storeKey,\n        previousStep: `${welcomeUrl}`,\n        nextStep: `${welcomeUrl}/step-4`,\n      },\n    },\n  ];\n}\n\nexport function welcomeStepsDefinitions(storeKey: string): Wizard.Step[] {\n  return [\n    {\n      path: '/step-4',\n      componentPath: 'Welcome/Step4',\n      props: {\n        storeKey,\n        previousStep: `${welcomeUrl}/step-3`,\n        nextStep: `${baseUrl}/questionary/step1`,\n      },\n    },\n    {\n      path: '/step-5',\n      componentPath: 'Welcome/Step5',\n      props: {\n        storeKey,\n        previousStep: `${baseUrl}/questionary/step6`,\n        nextStep: '/elderlycare/submit-steps/step-record/cough',\n      },\n    },\n  ];\n}\n\nexport default function stepsDefinition(storeKey: string) {\n  const steps: Wizard.Step[] = [\n    // Record Your Cough Steps\n    ...getCoughSteps(storeKey),\n    // Record Your Breath Steps\n    // ...getBreathSteps(storeKey),\n    // Record Your Speech Steps\n    ...getSpeechSteps(storeKey),\n    // Questionary\n    ...getQuestionarySteps(storeKey),\n    {\n      path: '/sending',\n      componentPath: `${baseComponentPath}/${middleComponentPathSubmission}/Sending`,\n      props: {\n        storeKey,\n        previousStep: `${baseUrl}/questionary/step3`,\n        nextStep: `${baseUrl}/thank-you`,\n      },\n    },\n    {\n      path: '/thank-you',\n      componentPath: `${baseComponentPath}/${middleComponentPathSubmission}/ThankYou`,\n      props: {\n        storeKey,\n        previousStep: `${welcomeUrl}`,\n        nextStep: `${baseUrl}/step-record/cough`,\n      },\n    },\n  ];\n\n  return steps;\n}\n","import styled from 'styled-components';\n\nconst Layout = styled.div`\n  padding-bottom: 40px; \n\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    margin: auto;\n\n    max-width: 768px;\n    width: 100%;\n  }\n`;\n\nexport default Layout;\n","import styled from 'styled-components';\n\nexport const WizardContainer = styled.div`\n  display: flex;\n  flex-direction:column;\n\n  height:100%;\n`;\n\nexport const StepContainer = styled.div`\n  height: 100%;\n`;\n\nexport const WizardNavControlPortal = styled.div`\n  margin-bottom: 24px;\n`;\n","import React from 'react';\nimport loadable from '@loadable/component';\nimport SlideRoutes from 'react-slide-routes';\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { StateMachineProvider } from 'little-state-machine';\nimport Layout from 'components/Layout/';\nimport { WizardContainer, StepContainer, WizardNavControlPortal } from './style';\n\ninterface WizardProps {\n  steps: Wizard.Step[];\n}\n\ninterface AsyncLoadProps extends Partial<Wizard.StepProps> {\n  container: string;\n}\n\nconst AsyncLoad = loadable(({ container }: AsyncLoadProps) => import(`containers/${container}`), {\n  fallback: <div>Loading ...</div>,\n});\n\nfunction clearPath(path: string) {\n  return path.replace(/\\/$/, '');\n}\n\nconst Wizard = ({ steps, children }: React.PropsWithChildren<WizardProps>) => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const [loadSteps, setLoadSteps] = React.useState(false);\n\n  const pathList = React.useMemo(() => {\n    const base = clearPath(match.url);\n    return steps.map(step => base + step.path);\n  }, [match.url, steps]);\n\n  React.useEffect(() => {\n    setLoadSteps(true);\n  }, []);\n\n  return (\n    <StateMachineProvider>\n      <WizardContainer>\n        <StepContainer>\n          {loadSteps && (\n            <SlideRoutes location={location} timing=\"ease-in-out\" duration={500} pathList={pathList}>\n              {steps.map(step => (\n                <Route\n                  key={step.componentPath}\n                  exact\n                  path={Array.isArray(step.path)\n                    ? step.path.map(s => (match.path + s))\n                    : match.path + step.path}\n                  render={() => (\n                    <Layout>\n                      <AsyncLoad\n                        container={step.componentPath}\n                        {...step.props}\n                      />\n                    </Layout>\n\n                  )}\n                />\n              ))}\n            </SlideRoutes>\n          )}\n        </StepContainer>\n        <WizardNavControlPortal id=\"wizard-buttons\">\n          {children}\n        </WizardNavControlPortal>\n      </WizardContainer>\n    </StateMachineProvider>\n  );\n};\n\nexport default React.memo(Wizard);\n","import styled from 'styled-components';\n\nexport const WelcomeWizardStepIndicators = styled.ul`\n  display: flex;\n  justify-content:center;\n  padding: 0;\n  margin-bottom: 22px;\n\n @media screen and (${props => props.theme.breakpoints.tablet}){\n    margin-bottom: 40px;\n  }\n`;\n\nexport const WelcomeWizardStepIndicator = styled.li`\n  background-color: ${props => props.theme.colors.gray};\n  border-radius: 50%;\n  display: inline-block;\n\n  height: 7px;\n  width: 7px;\n\n  &:not(:first-of-type){\n    margin-left: 6px;\n  };\n\n  &.active {\n    background-color: ${props => props.theme.colors.darkBlack};\n  };\n\n`;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\n\n// Styles\nimport {\n  WelcomeWizardStepIndicators,\n  WelcomeWizardStepIndicator,\n} from './style';\n\ninterface ProgressIndicatorProps {\n  className?: string;\n  current: number;\n  total: number;\n}\n\nconst ProgressIndicator = ({\n  className = '',\n  current,\n  total,\n}: ProgressIndicatorProps) => {\n  // Memos\n  const stepButtons = React.useMemo(() => {\n    const stepButtonsElements: React.ReactElement[] = [];\n\n    for (let step = 0; step < total; step += 1) {\n      stepButtonsElements.push((\n        <WelcomeWizardStepIndicator\n          className={step === current ? 'active' : ''}\n          id={`WelcomeStepButton-${step}`}\n          key={`WelcomeStepButton-${step}`}\n        />\n      ));\n    }\n\n    return stepButtonsElements;\n  }, [current, total]);\n\n  return (\n    <WelcomeWizardStepIndicators className={className}>\n      {stepButtons}\n    </WelcomeWizardStepIndicators>\n  );\n};\n\nexport default React.memo(ProgressIndicator);\n","import React from 'react';\nimport { useRouteMatch, useLocation } from 'react-router-dom';\nimport { createStore, setStorageType } from 'little-state-machine';\n\n// Wizard\nimport Wizard from 'components/Wizard';\n\n// Components\nimport DotIndicators from 'components/DotIndicators';\nimport {\n  getWelcomeStepsWithoutDots, welcomeStepsDefinitions,\n} from 'helper/stepsDefinitions';\n\nsetStorageType(window.localStorage);\n\nconst StoreKey = 'welcome';\n\ncreateStore({\n  [StoreKey]: {},\n}, {\n  name: 'elderly_care-wizard',\n});\n\nconst stepsWithoutDots = getWelcomeStepsWithoutDots(StoreKey);\nconst currentSteps = welcomeStepsDefinitions(StoreKey);\n\nconst allSteps = [...stepsWithoutDots, ...currentSteps];\n\nconst Welcome = () => {\n  // Hooks\n  const location = useLocation();\n  const match = useRouteMatch();\n\n  const url = location.pathname.replace(match.url, '');\n\n  const active = currentSteps.findIndex(step => step.path === url);\n\n  return (\n    <Wizard\n      steps={allSteps}\n    >\n      {active >= 0 && (\n        <DotIndicators\n          current={active}\n          total={currentSteps.length}\n        />\n      )}\n    </Wizard>\n  );\n};\n\nexport default React.memo(Welcome);\n"],"sourceRoot":""}